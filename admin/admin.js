// –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç—è–º–∏
let newsData = [];

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    loadNewsData();
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
async function loadNewsData() {
    try {
        const response = await fetch('../data/news.json');
        if (response.ok) {
            newsData = await response.json();
        } else {
            // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            newsData = createDefaultNewsData();
        }
        renderNewsCards();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        newsData = createDefaultNewsData();
        renderNewsCards();
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
function createDefaultNewsData() {
    return [
        {
            id: 1,
            title: "–û—Ç–∫—Ä—ã–ª–æ—Å—å –Ω–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏–∏",
            description: "–° —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º –∏ –æ–ø—ã—Ç–Ω—ã–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏",
            badge: "üÜï –ù–æ–≤–æ—Å—Ç—å",
            date: "15 –≤–µ—Ä–µ—Å–Ω—è 2024",
            image: "https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80"
        },
        {
            id: 2,
            title: "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó",
            description: "–ö–æ–∂–Ω–æ–≥–æ –≤—ñ–≤—Ç–æ—Ä–∫–∞ –∑ 9:00 –¥–æ 12:00 –¥–ª—è –ø–µ–Ω—Å—ñ–æ–Ω–µ—Ä—ñ–≤",
            badge: "üìÖ –ê–∫—Ü—ñ—è",
            date: "10 –≤–µ—Ä–µ—Å–Ω—è 2024",
            image: "https://images.unsplash.com/photo-1559757175-0eb30cd8c063?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80"
        },
        {
            id: 3,
            title: "–ù–æ–≤—ñ –≤–∏–¥–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏—Ö –∞–Ω–∞–ª—ñ–∑—ñ–≤",
            description: "–†–æ–∑—à–∏—Ä–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–æ—Å–ª—ñ–¥–∂–µ–Ω—å",
            badge: "üî¨ –ü–æ—Å–ª—É–≥–∞",
            date: "8 –≤–µ—Ä–µ—Å–Ω—è 2024",
            image: "https://images.unsplash.com/photo-1582750433449-648ed127bb54?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80"
        },
        {
            id: 4,
            title: "–û—Ç—Ä–∏–º–∞–ª–∏ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç —è–∫–æ—Å—Ç—ñ ISO 9001",
            description: "–ú—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∞ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É",
            badge: "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è",
            date: "5 –≤–µ—Ä–µ—Å–Ω—è 2024",
            image: "https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80"
        },
        {
            id: 5,
            title: "–ù–æ–≤–∏–π —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç –∑ –Ω–µ–≤—Ä–æ–ª–æ–≥—ñ—ó",
            description: "–î–æ–∫—Ç–æ—Ä –ü–µ—Ç—Ä–µ–Ω–∫–æ –û–ª–µ–∫—Å—ñ–π –û–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
            badge: "üë®‚Äç‚öïÔ∏è –õ—ñ–∫–∞—Ä",
            date: "1 –≤–µ—Ä–µ—Å–Ω—è 2024",
            image: "https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80"
        },
        {
            id: 6,
            title: "–ü–æ–º–æ–≥–ª–∏ –±–æ–ª–µ–µ 5000 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤",
            description: "–í —ç—Ç–æ–º –≥–æ–¥—É –Ω–∞—à–∞ –∫–ª–∏–Ω–∏–∫–∞ –æ–∫–∞–∑–∞–ª–∞ –ø–æ–º–æ—â—å —Ä–µ–∫–æ—Ä–¥–Ω–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤",
            badge: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            date: "28 —Å–µ—Ä–ø–Ω—è 2024",
            image: "https://images.unsplash.com/photo-1584515933487-779824d29309?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80"
        }
    ];
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
function renderNewsCards() {
    const newsGrid = document.getElementById('newsGrid');
    newsGrid.innerHTML = '';

    newsData.forEach((news, index) => {
        const card = createNewsCard(news, index);
        newsGrid.appendChild(card);
    });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏
function createNewsCard(news, index) {
    const card = document.createElement('div');
    card.className = 'news-card';
    card.innerHTML = `
        <h3>–ù–æ–≤–æ—Å—Ç—å ${index + 1}</h3>
        
        <div class="form-group">
            <label>–¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</label>
            <img src="${news.image}" alt="–¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" class="current-image" id="currentImage_${index}">
        </div>

        <div class="form-group">
            <label>–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</label>
            <div class="image-upload" onclick="selectImage(${index})">
                <input type="file" id="imageInput_${index}" accept="image/*" style="display: none;" onchange="handleImageUpload(${index}, this)">
                <p>üì∏ –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                <p style="font-size: 12px; color: #7f8c8d;">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPG, PNG, GIF</p>
                <img id="preview_${index}" class="image-preview" style="display: none;">
            </div>
        </div>

        <div class="form-group">
            <label>–ë–µ–π–¥–∂:</label>
            <input type="text" id="badge_${index}" value="${news.badge}" placeholder="üÜï –ù–æ–≤–æ—Å—Ç—å">
        </div>

        <div class="form-group">
            <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
            <input type="text" id="title_${index}" value="${news.title}" placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏">
        </div>

        <div class="form-group">
            <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
            <textarea id="description_${index}" rows="3" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏">${news.description}</textarea>
        </div>

        <div class="form-group">
            <label>–î–∞—Ç–∞:</label>
            <input type="text" id="date_${index}" value="${news.date}" placeholder="15 –≤–µ—Ä–µ—Å–Ω—è 2024">
        </div>

        <button class="btn" onclick="saveNews(${index})">
            üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
    `;
    return card;
}

// –í—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function selectImage(index) {
    document.getElementById(`imageInput_${index}`).click();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function handleImageUpload(index, input) {
    const file = input.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const preview = document.getElementById(`preview_${index}`);
            const uploadDiv = input.parentElement;
            
            preview.src = e.target.result;
            preview.style.display = 'block';
            uploadDiv.classList.add('has-image');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
            newsData[index].image = e.target.result;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            document.getElementById(`currentImage_${index}`).src = e.target.result;
        };
        reader.readAsDataURL(file);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
function saveNews(index) {
    const badge = document.getElementById(`badge_${index}`).value;
    const title = document.getElementById(`title_${index}`).value;
    const description = document.getElementById(`description_${index}`).value;
    const date = document.getElementById(`date_${index}`).value;

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    newsData[index] = {
        ...newsData[index],
        badge: badge,
        title: title,
        description: description,
        date: date
    };

    showSuccessMessage();
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
async function saveAllNews() {
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    newsData.forEach((news, index) => {
        const badge = document.getElementById(`badge_${index}`).value;
        const title = document.getElementById(`title_${index}`).value;
        const description = document.getElementById(`description_${index}`).value;
        const date = document.getElementById(`date_${index}`).value;

        newsData[index] = {
            ...newsData[index],
            badge: badge,
            title: title,
            description: description,
            date: date
        };
    });

    try {
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('newsData', JSON.stringify(newsData));
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∞–π—Ç–µ
        await updateMainSiteNews();
        
        showSuccessMessage();
        console.log('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', newsData);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
        alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∞–π—Ç–µ
async function updateMainSiteNews() {
    try {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –≤—ã–∑–æ–≤
        // –ü–æ–∫–∞ —Å–æ–∑–¥–∞–µ–º JSON —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        const jsonData = JSON.stringify(newsData, null, 2);
        
        // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        const blob = new Blob([jsonData], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        const a = document.createElement('a');
        a.href = url;
        a.download = 'news.json';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        console.log('–§–∞–π–ª news.json –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
function showSuccessMessage() {
    const message = document.getElementById('successMessage');
    message.style.display = 'block';
    
    setTimeout(() => {
        message.style.display = 'none';
    }, 3000);
}

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64 –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
function convertImageToBase64(file) {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = () => resolve(reader.result);
        reader.onerror = error => reject(error);
        reader.readAsDataURL(file);
    });
}